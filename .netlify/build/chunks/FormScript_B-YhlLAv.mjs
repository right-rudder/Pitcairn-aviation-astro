import { d as createAstro, c as createComponent, r as renderTemplate, e as defineScriptVars } from './astro/server_CkN0ONMX.mjs';
import 'kleur/colors';
import 'html-escaper';
import 'clsx';

var __freeze = Object.freeze;
var __defProp = Object.defineProperty;
var __template = (cooked, raw) => __freeze(__defProp(cooked, "raw", { value: __freeze(raw || cooked.slice()) }));
var _a;
const $$Astro = createAstro("https://pitcairnaviation.com/");
const $$FormScript = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$FormScript;
  const { redirect } = Astro2.props;
  const GHL_WEBHOOK_URL = undefined                                           ;
  const RECAPTCHA_SITE_KEY = undefined                                  ;
  return renderTemplate(_a || (_a = __template(["<script>(function(){", '\n  const script = document.createElement("script");\n  script.src = `https://www.google.com/recaptcha/api.js?render=${RECAPTCHA_SITE_KEY}`;\n  script.async = true;\n  document.head.appendChild(script);\n\n  async function submitForm(e) {\n    e.preventDefault();\n\n    try {\n      const recaptchaToken = await grecaptcha.execute(RECAPTCHA_SITE_KEY, {\n        action: "submit",\n      });\n\n      const recaptchaResponse = await fetch("/recaptcha", {\n        method: "POST",\n        headers: { "Content-Type": "application/json" },\n        body: JSON.stringify({ recaptcha: recaptchaToken }),\n      });\n\n      const gResponse = await recaptchaResponse.json();\n\n      if (gResponse.success) {\n        await submitToGHL();\n      } else {\n        alert("Form submission failed. Please try again.");\n      }\n    } catch (error) {\n      console.error("An error occurred during form submission:", error);\n    }\n  }\n\n  async function submitToGHL() {\n    const formData = new FormData(form);\n\n    const confirmEmailValue = formData.get("confirm-email");\n    if (!confirmEmailValue) {\n      form.action = GHL_WEBHOOK_URL;\n    }\n\n    try {\n      const response = await fetch(form.action, {\n        method: "POST",\n        headers: { "Content-Type": "application/x-www-form-urlencoded" },\n        body: new URLSearchParams(formData),\n      });\n\n      if (response.ok) {\n        window.location.href = redirect;\n      } else {\n        console.error("Form submission failed:", response.statusText);\n      }\n    } catch (error) {\n      console.error("Network error occurred while submitting the form:", error);\n    }\n  }\n\n  const form = document.getElementById("form");\n  form.addEventListener("submit", submitForm);\n})();</script>'], ["<script>(function(){", '\n  const script = document.createElement("script");\n  script.src = \\`https://www.google.com/recaptcha/api.js?render=\\${RECAPTCHA_SITE_KEY}\\`;\n  script.async = true;\n  document.head.appendChild(script);\n\n  async function submitForm(e) {\n    e.preventDefault();\n\n    try {\n      const recaptchaToken = await grecaptcha.execute(RECAPTCHA_SITE_KEY, {\n        action: "submit",\n      });\n\n      const recaptchaResponse = await fetch("/recaptcha", {\n        method: "POST",\n        headers: { "Content-Type": "application/json" },\n        body: JSON.stringify({ recaptcha: recaptchaToken }),\n      });\n\n      const gResponse = await recaptchaResponse.json();\n\n      if (gResponse.success) {\n        await submitToGHL();\n      } else {\n        alert("Form submission failed. Please try again.");\n      }\n    } catch (error) {\n      console.error("An error occurred during form submission:", error);\n    }\n  }\n\n  async function submitToGHL() {\n    const formData = new FormData(form);\n\n    const confirmEmailValue = formData.get("confirm-email");\n    if (!confirmEmailValue) {\n      form.action = GHL_WEBHOOK_URL;\n    }\n\n    try {\n      const response = await fetch(form.action, {\n        method: "POST",\n        headers: { "Content-Type": "application/x-www-form-urlencoded" },\n        body: new URLSearchParams(formData),\n      });\n\n      if (response.ok) {\n        window.location.href = redirect;\n      } else {\n        console.error("Form submission failed:", response.statusText);\n      }\n    } catch (error) {\n      console.error("Network error occurred while submitting the form:", error);\n    }\n  }\n\n  const form = document.getElementById("form");\n  form.addEventListener("submit", submitForm);\n})();</script>'])), defineScriptVars({ GHL_WEBHOOK_URL, RECAPTCHA_SITE_KEY, redirect }));
}, "/Users/raminka/Developer/right-rudder/pitcairn-aviation-astro/src/components/FormScript.astro", void 0);

export { $$FormScript as $ };
